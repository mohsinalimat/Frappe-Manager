name: E2E migration testing

on:
  push:
    tags:
      - v*
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  e2e-migration-from-0_9_0-to-latest:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-ver: ["3.11", "3.12"]
        os: [ubuntu-latest]
        # os: [self-hosted-arm64, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Cache Docker images
        id: cache-docker-images
        uses: actions/cache@v3
        with:
          path: /tmp/docker-images
          key: docker-images-${{ runner.os }}-${{ hashFiles('Docker/images-tag.json') }}
          restore-keys: |
            docker-images-${{ runner.os }}-

      - name: Load cached Docker images
        if: steps.cache-docker-images.outputs.cache-hit == 'true'
        run: |
          mkdir -p /tmp/docker-images
          if [ -f /tmp/docker-images/images.tar ]; then
            docker load < /tmp/docker-images/images.tar
          fi

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-ver }}

      - name: header
        run: |
          echo -e "\e[1;33m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\e[0m
          \e[1;33m┃\e[0m \e[1;36m Migration from v0.9.0 to latest \e[0m \e[1;33m┃\e[0m
          \e[1;33m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\e[0m"

      - name: install frappe from v0.9.0
        run: |
          cd /tmp
          python -m pip install -U git+https://github.com/rtCamp/Frappe-Manager.git@v0.9.0

      - name: frappe version
        run: fm --version

      - name: e2e run
        timeout-minutes: 20
        working-directory: test
        run: |
          ./migration_test.sh oldToNew

      - name: Save Docker images
        if: always() && steps.cache-docker-images.outputs.cache-hit != 'true'
        run: |
          mkdir -p /tmp/docker-images
          if [ "$(docker images -q | wc -l)" -gt 0 ]; then
            docker save $(docker images -q) > /tmp/docker-images/images.tar
          fi

      # Save Docker images before cleanup
      - name: Save Docker images
        if: always() && steps.docker-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p /tmp/.buildx-cache
          docker images  # Debug: show what images we have
          docker save $(docker images -q) > /tmp/.buildx-cache/images.tar || true

      - name: cleanup
        if: always()
        run: |
          python -m pip uninstall -y frappe-manager
          sudo rm -rf ~/frappe

  e2e-migration-from-before_latest-to-latest:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-ver: ["3.11", "3.12"]
        os: [ubuntu-latest]
        # os: [self-hosted-arm64, ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Cache Docker images
        id: docker-cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: docker-${{ runner.os }}-${{ hashFiles('Docker/images-tag.json') }}
          restore-keys: |
            docker-${{ runner.os }}-

      - name: Load cached Docker images
        if: steps.docker-cache.outputs.cache-hit == 'true'
        run: |
          docker load < /tmp/.buildx-cache/images.tar || true

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-ver }}

      - name: install jq
        run: |
          sudo apt upgrade -y
          sudo apt install -y jq curl
      - name: header
        run: |
          echo -e "\e[1;33m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\e[0m
          \e[1;33m┃\e[0m \e[1;36m Migration from latest~1 to latest \e[0m \e[1;33m┃\e[0m
          \e[1;33m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\e[0m"

      - name: install frappe previous the latest release
        run: |
          python -m pip install -U git+https://github.com/rtCamp/Frappe-Manager.git@$(curl --silent https://api.github.com/repos/rtCamp/Frappe-Manager/tags | jq -r '.[1].name')

      - name: frappe version
        run: fm --version

      - name: e2e run
        timeout-minutes: 30
        working-directory: test
        run: |
          ./migration_test.sh semiNewToNew

      - name: cleanup
        if: always()
        run: |
          python -m pip uninstall -y frappe-manager
          sudo rm -rf ~/frappe
